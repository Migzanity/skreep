-- Keybind to open for PC is "comma" -> " , "
-- Made by Gi#7331

-- Notify the user with a tip
game:GetService("StarterGui"):SetCore("SendNotification", {
    Title = "Tips!",
    Text = "Wait 1 - 15 seconds to show GUI. If it doesn't show, try executing again.",
    Duration = 15
})

-- Destroy existing Emotes GUI if it exists
if game:GetService("CoreGui"):FindFirstChild("Emotes") then
    game:GetService("CoreGui"):FindFirstChild("Emotes"):Destroy()
end

-- Services
local ContextActionService = game:GetService("ContextActionService")
local HttpService = game:GetService("HttpService")
local GuiService = game:GetService("GuiService")
local CoreGui = game:GetService("CoreGui")
local MarketplaceService = game:GetService("MarketplaceService")
local Players = game:GetService("Players")
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")

local Emotes = {}
local LoadedEmotes = {}
local FavoritedEmotes = {}

-- Utility to add emote
local function AddEmote(name, id, price)
    LoadedEmotes[id] = false
    task.spawn(function()
        if not name or not id then return end

        -- Fetch product info
        local success, date = pcall(function()
            local info = MarketplaceService:GetProductInfo(id)
            return DateTime.fromIsoDate(info.Updated):ToUniversalTime()
        end)

        if not success then
            task.wait(10)
            AddEmote(name, id, price)
            return
        end

        -- Convert date to UNIX timestamp
        local unix = os.time({
            year = date.Year,
            month = date.Month,
            day = date.Day,
            hour = date.Hour,
            min = date.Minute,
            sec = date.Second
        })

        LoadedEmotes[id] = true
        table.insert(Emotes, {
            name = name,
            id = id,
            icon = "rbxthumb://type=Asset&id=" .. id .. "&w=150&h=150",
            price = price or 0,
            lastupdated = unix,
            sort = {}
        })
    end)
end

-- Screen GUI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "Emotes"
ScreenGui.DisplayOrder = 2
ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
ScreenGui.Enabled = true

-- BackFrame (Main GUI Frame)
local BackFrame = Instance.new("Frame")
BackFrame.Size = UDim2.new(0.9, 0, 0.5, 0)
BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackFrame.BackgroundTransparency = 1
BackFrame.BorderSizePixel = 0
BackFrame.Parent = ScreenGui

-- Button to open/close the GUI
local OpenButton = Instance.new("TextButton")
OpenButton.Name = "Open"
OpenButton.Parent = ScreenGui
OpenButton.Draggable = true
OpenButton.Size = UDim2.new(0.05, 0, 0.114, 0)
OpenButton.Position = UDim2.new(0.05, 0, 0.25, 0)
OpenButton.Text = "Close"
OpenButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
OpenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
OpenButton.TextScaled = true
OpenButton.BackgroundTransparency = .5
local UICorner = Instance.new("UICorner", OpenButton)
UICorner.CornerRadius = UDim.new(1, 0)

OpenButton.MouseButton1Click:Connect(function()
    if OpenButton.Text == "Open" then
        OpenButton.Text = "Close"
        BackFrame.Visible = true
    else
        OpenButton.Text = "Open"
        BackFrame.Visible = false
    end
end)

-- Emote name display
local EmoteName = Instance.new("TextLabel")
EmoteName.Name = "EmoteName"
EmoteName.TextScaled = true
EmoteName.AnchorPoint = Vector2.new(0.5, 0.5)
EmoteName.Position = UDim2.new(-0.1, 0, 0.5, 0)
EmoteName.Size = UDim2.new(0.2, 0, 0.2, 0)
EmoteName.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
EmoteName.TextColor3 = Color3.new(1, 1, 1)
EmoteName.BorderSizePixel = 0
local Corner = Instance.new("UICorner", EmoteName)
EmoteName.Parent = BackFrame

-- Loading text
local Loading = Instance.new("TextLabel", BackFrame)
Loading.AnchorPoint = Vector2.new(0.5, 0.5)
Loading.Text = "Loading..."
Loading.TextColor3 = Color3.new(1, 1, 1)
Loading.BackgroundColor3 = Color3.new(0, 0, 0)
Loading.TextScaled = true
Loading.BackgroundTransparency = 0.5
Loading.Size = UDim2.fromScale(0.2, 0.1)
Loading.Position = UDim2.fromScale(0.5, 0.2)
local CornerClone = Corner:Clone()
CornerClone.Parent = Loading

-- Main scrolling frame to hold emotes
local Frame = Instance.new("ScrollingFrame", BackFrame)
Frame.Size = UDim2.new(1, 0, 1, 0)
Frame.CanvasSize = UDim2.new(0, 0, 0, 0)
Frame.AutomaticCanvasSize = Enum.AutomaticSize.Y
Frame.ScrollingDirection = Enum.ScrollingDirection.Y
Frame.AnchorPoint = Vector2.new(0.5, 0.5)
Frame.Position = UDim2.new(0.5, 0, 0.5, 0)
Frame.BackgroundTransparency = 1
Frame.ScrollBarThickness = 5
Frame.BorderSizePixel = 0

-- Grid layout for emotes
local Grid = Instance.new("UIGridLayout", Frame)
Grid.CellSize = UDim2.new(0.105, 0, 0, 0)
Grid.CellPadding = UDim2.new(0.006, 0, 0.006, 0)
Grid.SortOrder = Enum.SortOrder.LayoutOrder

-- Emote sorting
local function SortEmotes()
    for _, Emote in pairs(Emotes) do
        local EmoteButton = Frame:FindFirstChild(Emote.id)
        if EmoteButton then
            local IsFavorited = table.find(FavoritedEmotes, Emote.id)
            EmoteButton.LayoutOrder = Emote.sort.recentfirst + ((IsFavorited and 0) or #Emotes)
        end
    end
end

-- Sort frame and button
local SortFrame = Instance.new("Frame", BackFrame)
SortFrame.Visible = false
SortFrame.Position = UDim2.new(1, 5, -0.125, 0)
SortFrame.Size = UDim2.new(0.2, 0, 0, 0)
SortFrame.BackgroundTransparency = 1

local SortList = Instance.new("UIListLayout", SortFrame)
SortList.Padding = UDim.new(0.02, 0)
SortList.HorizontalAlignment = Enum.HorizontalAlignment.Center

local function createsort(order, text, sort)
    local SortButton = Instance.new("TextButton", SortFrame)
    SortButton.Size = UDim2.new(1, 0, 0.2, 0)
    SortButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    SortButton.TextColor3 = Color3.new(1, 1, 1)
    SortButton.Text = text
    SortButton.TextScaled = true
    SortButton.MouseButton1Click:Connect(function()
        SortFrame.Visible = false
        OpenButton.Text = "Open"
        CurrentSort = sort
        SortEmotes()
    end)
    return SortButton
end

-- Sorting options
createsort(1, "Recently Updated First", "recentfirst")
createsort(2, "Recently Updated Last", "recentlast")
createsort(3, "Alphabetically First", "alphabeticfirst")
createsort(4, "Alphabetically Last", "alphabeticlast")
createsort(5, "Highest Price", "highestprice")
createsort(6, "Lowest Price", "lowestprice")

-- Sort button
local SortButton = Instance.new("TextButton", BackFrame)
SortButton.Size = UDim2.new(0.15, 0, 0.1, 0)
SortButton.Text = "Sort"
SortButton.BackgroundColor3 = Color3.new(0, 0, 0)
SortButton.MouseButton1Click:Connect(function()
    SortFrame.Visible = not SortFrame.Visible
    OpenButton.Text = "Open"
end)

-- Close button
local CloseButton = Instance.new("TextButton", BackFrame)
CloseButton.Size = UDim2.new(0.15, 0, 0.1, 0)
CloseButton.Text = "Kill Gui"
CloseButton.BackgroundColor3 = Color3.new(0.8, 0.2, 0.2)
CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Set Close button corner radius
local CornerClose = Instance.new("UICorner", CloseButton)
CornerClose.CornerRadius = UDim.new(1, 0)

-- Set BackFrame corner radius
local CornerBackFrame = Instance.new("UICorner", BackFrame)
CornerBackFrame.CornerRadius = UDim.new(0.2, 0)

-- Parent ScreenGui to CoreGui
ScreenGui.Parent = CoreGui

-- Example of adding emotes (You can replace these with actual emote data)
AddEmote("Emote 1", 1234567890, 10)
AddEmote("Emote 2", 1234567891, 15)
AddEmote("Emote 3", 1234567892, 20)
